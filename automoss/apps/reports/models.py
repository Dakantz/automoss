import uuid
from django.utils.timezone import now, timedelta
from django.db import models
from ..jobs.models import Job

def get_datetime_from_now():
    """ Returns date a week from now """
    return now()+timedelta(days=7)

def get_path(instance, filename):
    """ Generate file path to store report """
    return f"{instance.job.job_id}/moss_report/{filename}"

class MOSSReport(models.Model):
    """ Class to model MOSS Report Entity
    """
    # Job report belongs to
    job = models.ForeignKey(Job, on_delete=models.CASCADE, limit_choices_to={'status': "COM"})
    # Date report was created
    created_date = models.DateTimeField(default=now)
    # MOSS URL of report
    url = models.URLField(default=None)
    # Date url expires
    url_expire_date = models.DateTimeField(default=get_datetime_from_now)
    # Report HTML file on the server
    file = models.FileField(upload_to=get_path)

    def __str__(self):
        """ Report to string method
        """
        return f"Report at {self.url}"

def get_default_label():
    """ Generate default report label """
    return f"My Report - {now().strftime('%d/%m/%y-%H:%M:%S')}"

def get_path(instance, filename):
    """ Generate file path to store report """
    return f"{instance.moss_report.job.job_id}/reports/{filename}"

class GeneratedReport(models.Model):
    """ Class to model reports generated by the user
    """
    # Unique identifier for report
    report_id = models.CharField(primary_key=False, default=uuid.uuid4, max_length=32, unique=True, editable=False)
    # MOSS report that generated this report
    moss_report = models.ForeignKey(MOSSReport, on_delete=models.CASCADE)
    # Report name/label
    label = models.CharField(max_length=64, default=get_default_label)
    # Report file on the server
    file = models.FileField(upload_to=get_path)

    def __str__(self):
        """ Report to string method
        """
        return self.label
